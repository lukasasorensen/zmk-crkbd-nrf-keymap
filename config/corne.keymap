/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>


#define L0 0
#define L1 1
#define L2 2
#define L3 3
#define L4 4
#define L5 5

#define TAPPING_TERM 200

/ {
    keymap {
        compatible = "zmk,keymap";

        // Layer 0
        layer0 {
            bindings = <
            &kp TAB  &kp Q  &kp W  &kp E  &kp R  &kp T                &kp Y  &kp U  &kp I  &kp O  &kp P  &kp EQUAL
&kp LS(LC(LA(LGUI))) &kp A  &kp S  &kp D  &lt L3 F  &lt L4 G          &kp H  &kp J  &kp K  &kp L  &kp SEMI &kp SQT
           &kp LSHFT &kp Z  &kp X  &kp C  &kp V  &kp B                &kp N  &lt L5 M  &kp COMMA &kp DOT  &kp SLASH &kp RSHFT
                       &kp LCTRL  &mt LCTRL BSPC &mt LGUI TAB                  &mt LALT ENTER  &lt L1 SPACE  &kp ESC
            >;
        };

        // Layer 1
        layer1 {
            bindings = <
                &trans  &kp EXCL  &kp AT      &kp LBRC  &kp RBRC  &kp PIPE            &kp AMPS  &kp N7  &kp N8  &kp N9  &kp EQUAL &trans
                &trans  &kp HASH  &kp DOLLAR  &kp LPAR  &kp RPAR  &kp MINUS           &kp AMPS  &kp N4  &kp N5  &kp N6  &kp SQT   &trans
                &trans  &kp PRCNT &kp CARET   &kp LBKT  &kp RBKT  &kp GRAVE           &kp N0    &kp N1  &kp N2  &kp N3  &kp FSLH  &trans
                                       &trans  &lt L2 BSPC  &kp ESC                            &trans  &trans  &trans
            >; 
        };

        // Layer 2
        layer2 {
            bindings = <
                &trans  &kp ESC  &kp AMPS  &kp APOS   &kp EQUAL &kp BSLH          &none  &kp F7  &kp F8  &kp F9  &kp F12  &trans
                &trans  &kp DQT  &kp TILDE &kp MINUS  &kp PLUS  &kp UNDER         &none  &kp F4  &kp F5  &kp F6  &kp F11  &trans
                &trans  &none    &none     &kp UNDER  &none     &kp TILDE         &none &kp F1  &kp F2  &kp F3  &kp F12  &trans
                                   &trans  &trans  &trans                                 &trans  &trans  &trans
            >;
        };

        // Layer 3
        layer3 {
            bindings = <
                &none  &none  &none  &none  &none  &none      &kp HOME  &kp END  &none  &none  &none  &none
                &none  &none  &none  &none  &none  &none      &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none  &none
                &none  &none  &none  &none  &none  &none      &none  &kp PG_DN  &kp PG_UP  &none  &none  &none
                                &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        // Layer 4
        layer4 {
            bindings = <
                &none  &none  &none  &none  &none  &none       &none       &none         &none         &none  &kp C_PREV  &none
                &none  &none  &none  &none  &none  &none       &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &none  &none       &none
                &none  &none  &none  &none  &none  &none       &none       &kp C_NEXT    &none         &none  &none       &none
                        &none  &kp C_PREV  &kp C_NEXT                   &kp C_STOP  &kp C_PLAY_PAUSE  &trans
            >;
        };

        // Layer 5
        layer5 {
            bindings = <
                &none  &none  &none  &none  &none  &none               &sys_reset   &none  &none  &none  &none  &none
                &none  &none  &none  &none  &none  &none               &bootloader  &none  &none  &none  &none  &none
                &none  &none  &none  &none  &none  &none               &none        &none  &none  &none  &none  &none
                          &none  &none   &none                                &none  &none  &none
            >;
        };
    };
};
